!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/pauldos-/projects/cpp_projects/cpp05/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BUREAUCRAT_HPP	Bureaucrat.hpp	/^#define BUREAUCRAT_HPP$/;"	d
Bureaucrat	Bureaucrat.cpp	/^Bureaucrat(const bureaucrat& other)$/;"	f
Bureaucrat	Bureaucrat.cpp	/^Burocrat::Bureaucrat() : _name(""), _grade(0){}$/;"	f	class:Burocrat
Bureaucrat	Bureaucrat.hpp	/^class Bureaucrat$/;"	c
GradeTooHighException	Bureaucrat.hpp	/^	class GradeTooHighException : public std::exception$/;"	c	class:Bureaucrat
GradeTooLowException	Bureaucrat.hpp	/^	class GradeTooLowException : public std::exception$/;"	c	class:Bureaucrat
_grade	Bureaucrat.hpp	/^		int _grade;$/;"	m	class:Bureaucrat	typeref:typename:int
_name	Bureaucrat.cpp	/^Bureaucrat(const std::string& name)_name(name){}$/;"	f	typeref:typename:const std::string & name
_name	Bureaucrat.hpp	/^		const std::string _name;$/;"	m	class:Bureaucrat	typeref:typename:const std::string
getGrade	Bureaucrat.cpp	/^int getGrade() const$/;"	f	typeref:typename:int
getName	Bureaucrat.cpp	/^std::string getName() const$/;"	f	typeref:typename:std::string
operator =	Bureaucrat.cpp	/^Bureaucrat& operator=(const bureaucrat& other)$/;"	f	typeref:typename:Bureaucrat &
setGrade	Bureaucrat.cpp	/^void setGrade(int grade)$/;"	f	typeref:typename:void
~Bureaucrat	Bureaucrat.cpp	/^~Bureaucrat(){}$/;"	f
