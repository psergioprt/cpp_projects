!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/pauldos-/Documents/cpp_projects/cpp01/ex06/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
KAREN_HPP	Karen.hpp	/^#define KAREN_HPP$/;"	d
Karen	Karen.cpp	/^Karen::Karen()$/;"	f	class:Karen
Karen	Karen.hpp	/^class	Karen$/;"	c
KarenFunction	Karen.cpp	/^	typedef void	(Karen::*KarenFunction)();$/;"	t	function:Karen::complain	typeref:typename:void (Karen::*)()	file:
complain	Karen.cpp	/^void	Karen::complain( std::string level )$/;"	f	class:Karen	typeref:typename:void
debug	Karen.cpp	/^void	Karen::debug()$/;"	f	class:Karen	typeref:typename:void
error	Karen.cpp	/^void	Karen::error()$/;"	f	class:Karen	typeref:typename:void
info	Karen.cpp	/^void	Karen::info()$/;"	f	class:Karen	typeref:typename:void
main	main.cpp	/^int	main(int argc, char *argv[])$/;"	f	typeref:typename:int
warning	Karen.cpp	/^void	Karen::warning()$/;"	f	class:Karen	typeref:typename:void
~Karen	Karen.cpp	/^Karen::~Karen()$/;"	f	class:Karen
